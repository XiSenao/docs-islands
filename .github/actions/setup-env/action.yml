name: "Setup Environment"
description: "Setup Node.js, pnpm and dependencies with caching"

inputs:
  node-version:
    description: "Node.js version"
    required: false
    default: "22"
  playwright:
    description: "Install Playwright browsers"
    required: false
    default: "false"
  frozen-lockfile:
    description: "Use frozen lockfile"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Setup pnpm
      # pnpm/action-setup@v4.2.0.
      uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061
      with:
        run_install: false

    - name: Setup Node.js and cache pnpm store
      # actions/setup-node@v5.0.0.
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
      with:
        node-version: ${{ inputs.node-version }}
        cache: "pnpm"

    - name: Install dependencies
      shell: bash
      run: |
        # Use frozen-lockfile by default unless explicitly set to false
        if [[ "${{ inputs.frozen-lockfile }}" == "false" ]]; then
          echo "Installing dependencies without frozen lockfile..."
          pnpm install --no-frozen-lockfile
        else
          echo "Installing dependencies with frozen lockfile..."
          pnpm install --frozen-lockfile
        fi

    - name: Get Playwright version
      if: inputs.playwright == 'true'
      shell: bash
      run: |
        # Get version from root @playwright/test (used by CI)
        PLAYWRIGHT_VERSION=$(pnpm list @playwright/test --depth 0 --json 2>/dev/null | jq -r '.devDependencies["@playwright/test"].version' 2>/dev/null || echo "1.55.0")
        BROWSERS_PATH="$HOME/.cache/playwright"
        echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
        echo "PLAYWRIGHT_BROWSERS_PATH=$BROWSERS_PATH" >> $GITHUB_ENV
        echo "Playwright version: $PLAYWRIGHT_VERSION"
        echo "Browsers cache path: $BROWSERS_PATH"

    - name: Cache Playwright browsers
      if: inputs.playwright == 'true'
      id: playwright-cache
      # actions/cache@v4.3.0.
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
      with:
        path: ~/.cache/playwright
        key: playwright-${{ runner.os }}-v2-${{ env.PLAYWRIGHT_VERSION }}
        restore-keys: |
          playwright-${{ runner.os }}-v2-

    - name: Install Playwright browsers
      if: inputs.playwright == 'true' && steps.playwright-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "Installing Playwright browsers (cache miss)..."
        pnpm exec playwright install chromium --with-deps

    - name: Verify Playwright installation
      if: inputs.playwright == 'true'
      shell: bash
      run: |
        if [ "${{ steps.playwright-cache.outputs.cache-hit }}" == "true" ]; then
          echo "✅ Playwright browsers restored from cache"
        else
          echo "✅ Playwright browsers installed"
        fi
        ls -la ~/.cache/playwright || echo "Cache directory not found"

    - name: Ensure Playwright browsers are ready
      if: inputs.playwright == 'true'
      shell: bash
      run: |
        # Verify browser executable exists, if not reinstall
        if ! pnpm exec playwright install --dry-run chromium 2>&1 | grep -q "is already installed"; then
          echo "⚠️ Playwright browsers not properly installed, reinstalling..."
          pnpm exec playwright install chromium --with-deps
        else
          echo "✅ Playwright browsers are ready"
        fi
