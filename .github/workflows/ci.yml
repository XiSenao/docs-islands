name: CI

env:
  # Reduce memory usage - 4GB is typically sufficient.
  NODE_OPTIONS: --max-old-space-size=4096
  NODE_VERSION: "22"
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
  CI: true
  FORCE_COLOR: 1

permissions:
  contents: read
  pull-requests: write
  checks: write
  actions: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
      docs: ${{ steps.filter.outputs.docs }}
      deps: ${{ steps.filter.outputs.deps }}
      ci: ${{ steps.filter.outputs.ci }}
    steps:
      # action/checkout@v5.0.0.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          # Fetch full history for change detection.
          fetch-depth: 0

      # dorny/paths-filter@v3.0.2.
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          filters: |
            src:
              - 'packages/**'
              - '!packages/**/docs/**'
              - 'utils/**'
              - '*.config.*'
            docs:
              - 'docs/**'
              - 'packages/**/docs/**'
            deps:
              - 'pnpm-lock.yaml'
              - '**/package.json'
            ci:
              - '.github/**/*.yml'

  commit-check:
    name: Validate Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      # action/checkout@v5.0.0.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          # Fetch full history for commit validation.
          fetch-depth: 0

      - name: Validate Commit Messages
        uses: ./.github/actions/validate-commits
        with:
          strict_mode: false

  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.src == 'true' || needs.changes.outputs.deps == 'true'
    steps:
      # action/checkout@v5.0.0.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build Packages
        run: pnpm build
        env:
          NODE_ENV: production
          CI: true

      - name: Upload Build Artifacts
        # actions/upload-artifact@v4.6.2.
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa024
        with:
          name: packages-build-artifacts
          path: |
            packages/
            packages/**/.vitepress/
            !packages/**/coverage
            !packages/**/.vitepress/cache
          retention-days: 1

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: [changes, build-artifacts]
    # Run even if build-artifacts was skipped (e.g., only CI files changed).
    if: |
      always() &&
      !cancelled() &&
      !contains(needs.*.result, 'failure') &&
      (needs.changes.outputs.src == 'true' || needs.changes.outputs.ci == 'true')
    steps:
      # action/checkout@v5.0.0.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Download artifacts if available (when src files changed).
      - name: Download Build Artifacts
        if: needs.build-artifacts.result == 'success'
        # actions/download-artifact@v5.0.0.
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce04
        with:
          name: packages-build-artifacts
          path: packages/

      # Build if artifacts not available (CI-only changes).
      - name: Build Packages
        if: needs.build-artifacts.result != 'success'
        run: pnpm build
        env:
          NODE_ENV: production
          CI: true

      - name: Format
        run: pnpm format

      - name: Lint
        run: pnpm lint

      - name: Type Check
        run: pnpm typecheck

  test:
    name: Test (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    needs: [changes, build-artifacts]
    if: needs.changes.outputs.src == 'true' || needs.changes.outputs.deps == 'true'
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        include:
          # Primary test environment (reuse build).
          - name: "Linux / Node 22"
            os: ubuntu-latest
            node: 22
            coverage: true
            use-artifacts: true
          # LTS version (reuse build).
          - name: "Linux / Node 20"
            os: ubuntu-latest
            node: 20
            use-artifacts: true
          # Cross-platform tests (standalone build, main branch only).
          - name: "macOS / Node 22"
            os: macos-latest
            node: 22
            skip-pr: true
          - name: "Windows / Node 22"
            os: windows-latest
            node: 22
            skip-pr: true
          # Latest Node (allow failure).
          - name: "Linux / Node Latest"
            os: ubuntu-latest
            node: 24
            continue-on-error: true
            use-artifacts: true

    continue-on-error: ${{ matrix.continue-on-error || false }}
    steps:
      # action/checkout@v5.0.0.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ matrix.node }}
          playwright: true

      # Download pre-built artifacts for Linux environments.
      - name: Download Build Artifacts
        if: matrix.use-artifacts == true
        # actions/download-artifact@v5.0.0.
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce04
        with:
          name: packages-build-artifacts
          path: packages/

      # Build only for non-Linux or when artifacts unavailable.
      - name: Build Packages
        if: matrix.use-artifacts != true
        run: pnpm build
        env:
          NODE_ENV: production
          CI: true

      - name: Unit Tests
        if: ${{ !(matrix.skip-pr == true && github.event_name == 'pull_request') }}
        run: pnpm test:unit --coverage=${{ matrix.coverage || false }}
        env:
          CI: true

      - name: E2E Tests
        if: ${{ !(matrix.skip-pr == true && github.event_name == 'pull_request') }}
        run: pnpm test:e2e
        env:
          CI: true

      # Collect test coverage.
      - name: Upload Coverage
        if: matrix.coverage
        # codecov/codecov-action@v5.5.1.
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit
          fail_ci_if_error: false

      # Upload test failure artifacts.
      - name: Upload Test Results
        if: failure()
        # actions/upload-artifact@v4.6.2.
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa024
        with:
          name: test-results-${{ matrix.name }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  build:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: [changes, build-artifacts]
    if: needs.changes.outputs.docs == 'true' || needs.changes.outputs.src == 'true'
    steps:
      # action/checkout@v5.0.0.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Download pre-built packages.
      - name: Download Build Artifacts
        # actions/download-artifact@v5.0.0.
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce04
        with:
          name: packages-build-artifacts
          path: packages/

      - name: Build Docs
        run: pnpm docs:build

      # Upload documentation build artifacts.
      - name: Upload Docs Artifacts
        # actions/upload-artifact@v4.6.2.
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: docs-dist
          path: docs/.vitepress/dist
          retention-days: 1

  status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [build-artifacts, quality, test, build]
    if: always()
    steps:
      - name: Check Status
        run: |
          if [[ "${{ needs.build-artifacts.result }}" == "failure" || \
                "${{ needs.quality.result }}" == "failure" || \
                "${{ needs.test.result }}" == "failure" || \
                "${{ needs.build.result }}" == "failure" ]]; then
            echo "❌ CI Failed"
            exit 1
          else
            echo "✅ CI Passed"
          fi
